Project ideas suggested on the Git mailing list for Google's Summer of Code 2007 (please add the name of the person who suggested it, as SoC projects need a mentor):

* Checkout hooks (David Lang, privately suggested).
* More complete tests (Johannes Schindelin [http://article.gmane.org/gmane.comp.version-control.git/40801 on gmane]).
* Apply sparse to fix errors; even better teach sparse how to fix common errors, and use sparse to fix them (Johannes Schindelin [http://article.gmane.org/gmane.comp.version-control.git/40801 on gmane]).
* Make more tools builtin (convert existing shell scripts to C) (Johannes Schindelin [http://article.gmane.org/gmane.comp.version-control.git/40801 on gmane]).
* Make it so that one .exe click-and-install would make the full power of git available on Windows (Andy Parkins [http://article.gmane.org/gmane.comp.version-control.git/40904 on gmane]).
* Subproject/submodule support (Raimund Bauer [http://article.gmane.org/gmane.comp.version-control.git/40911 on gmane]).
* much talked on (and even with two different independent implementations) _subproject (submodule) support_, which would certainly help using git for large modular projects like KDE, Mozilla or distributions (Jakub Narebski [http://article.gmane.org/gmane.comp.version-control.git/41031 on gmane]).
* lightweight checkout aka. .gitlink idea, to have file which would point to object directory, refs directory, index file and current branch file. It could help submodule support. (Jakub Narebski [http://article.gmane.org/gmane.comp.version-control.git/41031 on gmane]).
* partial/sparse checkouts, where you can checkout for example only Documentation directory, work on it, but commit full tree. Sometimes it better suits than using submodules (Jakub Narebski [http://article.gmane.org/gmane.comp.version-control.git/41031 on gmane]).
* gitweb caching and other gitweb improvements: bringing together all gitweb implementations. Perhaps gitweb maintainer could come of it. Or at least gitweb admin for kernel.org (Jakub Narebski [http://article.gmane.org/gmane.comp.version-control.git/41031 on gmane]).
* libification (make more parts of libgit.a reentrant by removing static variables, avoid dying e.g. when malloc() fails, etc.) (Jakub Narebski [http://article.gmane.org/gmane.comp.version-control.git/41031 on gmane]).
* lazy clone aka remote alternates (Jakub Narebski [http://article.gmane.org/gmane.comp.version-control.git/41031 on gmane]).
* Complete the Eclipse plugin (Jakub Narebski [http://article.gmane.org/gmane.comp.version-control.git/41031 on gmane]).
* A new merge strategy "merge-blame".  By running "git-blame -C $ancestor..$other -- $path", you can find $path contains pieces from other paths (it could be a single other path, in which case you found a wholesale rename).  Then you can run "git-diff $ancestor..$mine -- $other_path" for each of these paths to find out if our branch changes the parts of them and how.  By incorporating these changes you can come up a merged $path that reflects changes made to other paths, in other words, tracking code movements (??? Anynomously added to the Wiki; was not suggested on the mailing list or on IRC).
* Better branch support to cvsserver. This will make it easier for projects to migrate from CVS to GIT. This project involves GIT+Perl+SQLite. (mentor: Martin Langhoff)
* Continue work in large-scale repositories migration -- the goal is to demonstrate a successful Mozilla CVS import, based on the work started by Jon Smirl. (mentor: Martin Langhoff)

__NOTOC__