----
<b>Table of contents:</b>

<<<!-- ! TOC here -->(2)>>
----

= General =

<<Anchor(--amend)>>
== How to fix the most recent commit ==

Git allows you to easily fix up the most recent commit you've made on
a branch with the --amend option:

For example the following command will allow you to alter 
the commit message at the top of current head:
<pre><nowiki>
$ git commit --amend
</nowiki></pre>
while 
<pre><nowiki>
$ git commit -s --amend
</nowiki></pre>
will let you alter the commit message and will also automatically
add a sign-off message for you.

<<Anchor(rewrite-hist)>>
== How to change commits deeper in history ==

Since history in Git is immutable, fixing anything but the most recent commit
(commit which is not branch head) requires that the history is rewritten from
the changed commit and forward.

You can use [[Cogito]]'s [http://www.kernel.org/git/?p=cogito/cogito-doc.git;a=blob;hb=HEAD;f=txt/cg-admin-rewritehist.1.txt cg-admin-rewritehist(1)] for that.

= Web =

<<Anchor(RSS)>>
== How to generate RSS feed off-line? ==

You can either adapt [http://bent.latency.net/git2rss git2rss] tool by Bennett Todd to your needs (which is mentioned on [[Self:InterfacesFrontendsAndTools#git2rss|Interfaces Frontends And Tools]] page), or use <i>gitweb</i> to do that, running it as a script.  Assuming that <code><nowiki>gitweb.cgi</nowiki></code> is setup correctly, you can use:
<pre><nowiki>env REQUEST_METHOD=GET QUERY_STRING='p=git/git.git;a=rss' \
./gitweb.cgi | (read; read; cat)</nowiki></pre>
where of course instead of <code><nowiki>git/git.git</nowiki></code> you put project (git repository) you are interested in.

<<Anchor(SSH-tunnel)>>
== How to push/pull via ssh to host behind gateway? ==

There are two possible solutions. With first, using `ProxyCommand` option of ssh, you can connect to the entire network behind firewall. In your ssh configuration file, for example <code><nowiki>~/.ssh/config</nowiki></code> put the following:
<pre><nowiki>Host *.foo.internal
     [[ProxyCommand]] ssh gateway.foo.com exec nc %h %p</nowiki></pre>
(where `'%h'` expands to the host you connect to, and `'%p'` to the port you are using). You have to have `nc` ([http://www.vulnwatch.org/netcat/ netcat] or [http://netcat.sourceforge.net/ GNU Netcat]) installed on gateway, but this should be no problem as it is 22K binary. Note that path is expanded on local side, while it should be to file on gateway side.

Second is slightly faster, doesn't need any tool besides ssh, but you have to run port forwarding command before connecting, must make sure that ssh tunnel is up, and must be set up host for host.  In your ssh configuration file, for example <code><nowiki>~/.ssh/config</nowiki></code> put the following:
<pre><nowiki>Host hostname
     NoHostAuthenticationForLocalhost yes
     HostName localhost
     Port 2222</nowiki></pre>
where `hostname' is the name you would be using for connecting.  Before trying to connect to host begind gateway, you must run
<pre><nowiki>ssh -f -N -L 2222:host.foo.internal:22 username@gateway.foo.com
</nowiki></pre>
Of course port numbers must match (and port number should be above 1024 if you won't be running ssh tunnel as root).  If you have sufficiently new ssh, you can add `'-M'` option, for use with `ControlMaster` option.  You can also use [http://www.harding.motd.ca/autossh/ autossh] for running port forwarding/ssh tunnel.

__NOTOC__