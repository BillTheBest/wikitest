<!-- ## Please edit system and help pages ONLY in the moinmaster wiki! For more
 -->
<!-- ## information, please see [[MoinMaster]]:[[MoinPagesEditorGroup]].
 -->
<!-- ## Please edit (or translate) system/help pages on the moinmaster wiki ONLY.
 -->
<!-- ## For more information, please see [[MoinMaster]]:[[MoinPagesEditorGroup]].
 -->
<!-- ##master-page:Unknown-Page
 -->
<!-- ##master-date:Unknown-Date
 -->
<!-- #acl [[MoinPagesEditorGroup]]:read,write,delete,revert All:read
 -->
<!-- #format wiki
 -->
<!-- #language en
 -->

`[[RandomQuot]]e` macro selects random quotes from list items on this page. See also [[HelpOnMacros]].

Here are few tips for new users, or users that don't like to read the manual:

* Edit the [[FortuneCookies]] page to display randomly selected wisdom here.
* Tip: set your pages language with <code><nowiki>#language en</nowiki></code> processing instruction. See also [[HelpOnLanguages]].
* Tip: you can add your favorite pages to your navibar. See your Quicklinks list in [[UserPreferences]].
* Tip: you can search for multiple words, just like Google. See also [[HelpOnSearching]].
* Tip: get email notification when this page change, by clicking <b><<[[GetText]](subscribe)>></b>.
* Given enough eyeballs, all bugs are shallow.
* Software is like sex; it's better when it's free.
* We all know Linux is great: it does infinite loops in 5 seconds.
* "I name all my projects after myself: first 'Linux', now 'git'".
* ... where "core git" originally was about "what I use" and the whole "porcelain" side ends up being "what people who need hand-holding use"
* Real Programmers think better when playing Adventure or Rogue.
* If the code and the comments disagree, then both are probably wrong.
* Syntactic sugar causes cancer of the semicolon.
* "Never make any mistaeks."
* The first time, it's a KLUDGE! The second, a trick. Later, it's a well-established technique!
* The program isn't debugged until the last user is dead.
* Step #1 in programming: understand people.
* Do one thing and do it well.
* To err is human, to forgive, beyond the scope of the Operating System.
* Testing can show the presense of bugs, but not their absence.
* Case *does* matter. Anybody who claims otherwise is a total idiot. And no, e e cummings is not an example to the contrary.
* The people will complain. On this list. And I have to check the mails before deleting, because the Subject: does not say "I just took the rope, ignored your caveat emptor, and now I am dead. What should I do now?".
* In related news: there is really no question that bike sheds should be painted red. Really.
* Forged-signature-by: J. Random Hacker <jrandom@example.com>
* By "mutual agreement" I mean that I tell you what it looks like and you agree :)
* To be fair, there are uses for XML.  On Halloween, for example.
* A mouse is a device used to point at the xterm you want to type in.
* The First Law of Thermodynamics: A system with a constant energy, volume and pressure behaves in any way it wants.
* Everything you know is wrong.  But some of it is a useful first approximation.
* Logic is a systematic method of coming to the wrong conclusion with confidence.
* Technology is dominated by those who manage what they do not understand.
* Nothing ever gets built on schedule or within budget.
* To err is human, but to really foul things up requires a computer.
* Vini, vidi, Linux!
* Free Software: the Software by the People, of the People and for the People.<<BR>>Develop! Share! Enhance! and Enjoy!
* Rule of Open-Source Programming #1: Don't whine unless you are going to implement it yourself.
* Rule of Open-Source Programming #6: The user is always right unless proven otherwise by the developer.
* Rule of Open-Source Programming #7: Release early, release often. Clean compilation is optional.
* Rule of Open-Source Programming #11: When a developer says he will work on something, he or she means "maybe".
* Rule of Open-Source Programming #15: If you like it, let the author know. If you hate it, let the author know why.
* Rule of Open-Source Programming #34: Every successful project will eventually spawn a sub-project
* Writing a BitKeeper replacement is probably easier at this point than getting its license changed. <i>(Matt Mackall)</i>
* Beware of bugs in the above code; I have only proved it correct, not tried it.
* The question of whether a computer can think is no more interesting than the question of whether a submarine can swim.
* I'd love to change the world, but they won't give me the source code.
* Whenever anyone says, "theoretically", they really mean, "not really".
* It's harder to read code than to write it.

__NOTOC__