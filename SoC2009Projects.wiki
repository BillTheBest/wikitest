<b>Table of Contents:</b>
<<<!-- ! TOC here -->(2)>>
----
= Git Community projects =

See also [http://socghop.appspot.com/org/home/google/gsoc2009/git the Git GSoC2009 Google page].

This year Git received funding for 2 students,
and we are looking forward to the successful completion of the
following interesting projects:

== Interactive graph GUI ==
<b>Student:</b> Jeff Brantley <<BR>>
<b>Mentor:</b>  Johannes Schindelin <<BR>>

Git stores a repositoryâ€™s history as a directed acyclic graph (DAG) of commits and operations performed on the repository translate to changes to this graph. To aid understanding of Git, tutorials tend to include illustrations of this graph.

This project proposes a highly intuitive GUI for Git that lets a user interact directly with an illustration of this underlying DAG, invoking commands on nodes, branches, or tags via context menus.

<b>SoC page:</b> [http://socghop.appspot.com/student_project/show/google/gsoc2009/git/t124022376285 Interactive graph GUI] <<BR>>

== Add caching support to git-daemon ==
<b>Student:</b> Nick Edelen <<BR>>
<b>Mentor:</b>  Sam Vilain <<BR>>

Every time git-daemon handles a fetch, it must (re-)enumerate and (re-)pack all the required objects. this is often very inefficient.

I propose maintaining an updated list of commits/objects reachable from HEAD. this would eliminate our need for extensive tree traversals.

further, 'partial packfiles' could be used to cache slices of the object list. due to the nature of packfiles, these could more-or-less be coalesced to form the majority of the pack.

<b>SoC page:</b> [http://socghop.appspot.com/student_project/show/google/gsoc2009/git/t124022376432 Add caching support to git-daemon] <<BR>>

----
= Foreign projects =

== Using mercurial as a client for git repositories ==

<b>SoC page:</b> [http://socghop.appspot.com/student_project/show/google/gsoc2009/hg/t124022472367 Using mercurial as a client for git repositories] <<BR>>

== Implementing Git as class libraries in C# (also known as "managed code") ==

<b>SoC page:</b> [http://socghop.appspot.com/student_project/show/google/gsoc2009/mono/t124022708105 Implementing Git as class libraries in managed code] <<BR>>

__NOTOC__