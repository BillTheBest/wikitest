= Eclipse Plugin Wishlist =
Now that we have some basic features in the Eclipse plugin, we need to focus on making it usable by average users doing daily tasks.

== Create Branch ==
Create a new branch from any revision specification.

== Delete Branch ==
Delete a branch.

== Fetch ==
Fetch using the git (and git+ssh) is underway. That effort does not include HTTP fetch.

Initially I'd like to stay away from the commit walkers (e.g. HTTP).  Actually supporting them is likely a really good argument for at least making it possible for the user to configure jgit to invoke "git fetch" in an external process.

== Merge ==
Merging changes from one local branch to another.

Again, like fetch I'd like to keep egit/jgit 100% pure Java and implement merge-recursive in Java.  We may need to invoke RCS merge if Eclipse doesn't have its own 3 way file merge algorithm available, or do what core Git just did and implement a 3 way in memory merge algorithm.  git-merge-recursive is only 1336 lines of C so it should not be too difficult to port the algorithm to pure Java.

== Push ==
Pushing changes to a remote repository.

A lot like fetch, we should be able to support the native Git protocol for SSH based push, and for local directory access we just need to mount the other repository as a new Repository object and copy the object data from one to the other.  Probably easier than it is for core Git.

As far as packing data over the network goes I don't want to implement the binary delta algorithm in pure Java right now.  So this means we would send packs containing only whole objects (no deltas).  This shouldn't really be an issue for the receiving end, except that we will have a slightly higher network transfer cost coming from egit than if core Git was used to push the same set of objects.

== Support linked URIs ==

[[GitProvider]] does not currently support linked URIs

== Stacked GIT ==
Stacked Git operations. (Personally I have dropped this and will opt for the interactive rebase style instead / robin).

== Tag ==
Make a tag and delete tags

== Gitignore ==
Add the "Add to .gitignore" entry menu.

== SVN Integration ==
It would be swell -- but put it at the bottom of your priority list -- to have git-svn interoperability; sadly most of my git usage at the moment is in cloned svn repositories and it would be great if egit could do the right thing when the current git repo is cloned from svn. What "the right thing" is, exactly, is debatable, but I suppose some kind of integration with the Subclipse plugin is one possibility (and if nothing else, that plugin probably has code that can be reused.) I'd like to be able to update from and commit to the parent svn repository. <i>-- Steven Grimm</i>

I'm considering this to be out of scope for the time being, but if someone takes it on and submits reasonable patches we'll include them. <i>-- Shawn Pearce</i>

== Support synchronize view and local change sets ==
It would be really great to have support for Team Synchronize view that would show changed files and also allow to create local outgoing change sets (with those it would be easy to add Mylyn integration to manage them automatically) and maybe incoming change sets too<i> -- Eugene Kuleshov</i>

__NOTOC__