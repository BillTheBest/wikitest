----
<b>Table of contents:</b>

<<<!-- ! TOC here -->(2)>>
----

= Tutorials =
== Getting started ==

If you are new to [[Git]], here are some essential documents that will
give you an introduction to the basic workflows.

* For a quick start,
 [http://www.kernel.org/pub/software/scm/git/docs/tutorial.html the tutorial]
 covers the basics.

* See [http://www.kernel.org/pub/software/scm/git/docs/everyday.html the Everyday Git handbook]
 for a useful minimum set of commands depending on your style of git usage.

* CVS users may also want to read [http://www.kernel.org/pub/software/scm/git/docs/cvs-migration.html git for CVS users].

== Other relevant tutorials ==

* [[Cogito]] also has an
 [http://www.kernel.org/pub/software/scm/cogito/docs/introduction.html introduction]
 and a [http://www.kernel.org/pub/software/scm/cogito/docs/cg-ref.html quick reference] of
 frequently used commands.

* [http://linux.yyz.us/git-howto.html The Kernel Hacker's Git Tutorial]
 by Jeff Garzik may be useful.

* [http://marc.theaimsgroup.com/?l=git&m=113402372012587&w=4 git for the confused]
 a great explanation and summary of all git commands, some are out of date but still valuable.

* Check [[GitLinks]] for further info (including git-related info on pages of projects using git). 
* Some Chinese git tutorials: 
** [http://www.linuxsir.org/main/doc/git/gittutorcn.htm] or [http://www.bitsun.com/documents/gittutorcn.htm]
      translation for official tutorials
* [http://www.linuxsir.org/bbs/showthread.php?t=281294] or [http://www.newsmth.net/bbscon.php?bid=392&id=422519]
* [http://my.opera.com/dahema/blog/show.dml/171011] 
* [http://www-128.ibm.com/developerworks/cn/linux/l-git/index.html]

= Git Wiki =

Check the pages [[CategoryGitDocumentation|[[GitDocumentation]] category]] on this wiki.

* Git glossary ([[GitGlossary|[[GitWiki]] version]], [http://www.kernel.org/pub/software/scm/git/docs/glossary.html HTML version], [http://www.kernel.org/git/?p=git/git.git;a=blob;hb=HEAD;f=Documentation/glossary.txt source via gitweb]) offers an explanation of terminology used.
* An overview of the [[RevisionSpecification]] used by the `git log` command and
 several repository visualizers.
* A bit about [[GraftPoint|[[GraftPoints]]]]; when and how to use them.
* Introduction to git's [[IndexFile]].
* [[BranchesInGit]] is an explanation about how Git understand branches.
* Use common [[CommitMessageConventions]], which are used by some of Git tools. 

= Man pages =

Each git command is documented in it's own man page. If the man pages are installed
on your local system running: <pre><nowiki>
$ man git-log
</nowiki></pre>
will give you the man page for the git log command.
[http://www.kernel.org/pub/software/scm/git/docs/git.html git(7)]
serves as an overview of git commands and man pages.

Online versions of the [[Git]] man pages corresponding to the
latest development version can be found at:

* http://www.kernel.org/pub/software/scm/git/docs/

Similarly, [[Cogito]] man pages are available from:

* http://www.kernel.org/pub/software/scm/cogito/docs/

= Howtos and technical documents =

Several howtos exist that describes the workflow for accomplishing
various specific tasks, such as using the post-update hook to rebuild
documentation. Note, these are typically derived from discussions
on the git mailing list and only available in plain text.

* http://kernel.org/pub/software/scm/git/docs/howto/

There also exists a handful of technical documents that describes
lowlevel details on how different parts of git operates. These are
mostly useful for developers. You can find them in the
[http://www.kernel.org/git/?p=git/git.git;a=tree;f=Documentation/technical Documentation/technical]
directory in the git source tree.

<<BR>>
----
----
= Getting and installing documentation =

You can find all the plain text documentation in the git source tree's
[http://www.kernel.org/git/?p=git/git.git;a=tree;f=Documentation Documentation/]
directory.

In order to build the HTML version of the documentation you need to have [[AsciiDoc]]
version 7.0 or greater installed. Man pages also require that xmlto is installed.

To build and install documentation from the git source code simply
run: <pre><nowiki>
$ make install-doc
</nowiki></pre>

If you want to avoid having to install the documentation tools,
autogenerated documentation is available in separate tarballs from:
* http://www.kernel.org/pub/software/scm/git/ 
beginning with the 1.4.0 version, as:
* http://www.kernel.org/pub/software/scm/git/git-htmldocs-1.4.0.tar.gz
* http://www.kernel.org/pub/software/scm/git/git-manpages-1.4.0.tar.gz
Also, many distributions bundle pregenerated documentation with either
the git-core package or in a separate git-doc package.

If you already track development in the public git project repository, you may also choose
to fetch the autogenerated HTML and man pages from the <code><nowiki>html</nowiki></code> and <code><nowiki>man</nowiki></code>
branches. Read [http://www.kernel.org/git/?p=git/git.git;a=blob;hb=HEAD;f=INSTALL INSTALL] 
for more detailed documentation (at the end of the file). Once you have fetched
the branches, you can use:
<pre><nowiki>
$ git tar-tree man  > git-man.tar
$ git tar-tree html > git-html.tar
</nowiki></pre>
to easily extract the documentation.

----
[[CategoryGitDocumentation]]
[[CategoryGitHomepage]] ([http://git.or.cz/#documentation Documentation])
----
[[CategoryGitDocumentation]] [[CategoryGitDocumentation]]

__NOTOC__