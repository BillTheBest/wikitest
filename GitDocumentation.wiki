== Git Documentation ==
* Git glossary ([[GitGlossary:[[GitWiki]] version]], [http://www.kernel.org/pub/software/scm/git/docs/glossary.html HTML version], [http://www.kernel.org/git/?p=git/git.git;a=blob;hb=HEAD;f=Documentation/glossary.txt source via gitweb])
* Git [http://www.kernel.org/pub/software/scm/git/docs manual page] - Online version bundled with Git. (It's the informations that shows up using the command <i>man git</i>)
* [http://www.kernel.org/pub/software/scm/git/docs/user-manual.html Git User's Manual] - Online version bundled with Git
* [http://www.kernel.org/pub/software/scm/git/docs/tutorial.html A tutorial introduction to git] and [http://www.kernel.org/pub/software/scm/git/docs/tutorial-2.html A tutorial introduction to git: part two] - Online version bundled with Git
* [http://www.kernel.org/pub/software/scm/git/docs/everyday.html Everyday Git, with 20 commands or so] - Online version bundled with Git
* Git for [http://www.kernel.org/pub/software/scm/git/docs/cvs-migration.html CVS users] - Online version bundled with Git
== Documentation on this Wiki ==
All documentation residing on this wiki is put in the [[CategoryGitDocumentation:[[GitDocumentation]] category]]

* Git glossary ([[GitGlossary:[[GitWiki]] version]], [http://www.kernel.org/pub/software/scm/git/docs/glossary.html HTML version], [http://www.kernel.org/git/?p=git/git.git;a=blob;hb=HEAD;f=Documentation/glossary.txt source via gitweb])
* Git [[QuickStart]]
* [[GitCheatSheet]] (see also [[GitLinks#head-6af01ffee87e2fae45f78f5302e1d05b9f773a65:[[GitLinks]]]])
* An overview of the [[RevisionSpecification]] used by the <code><nowiki>git log</nowiki></code> command and several repository visualizers.
* [[GraftPoint:[[GraftPoints]]]]; when and how to use them
* Introduction to git's [[IndexFile]] and [[WhatIsTheIndex]]
== User contributed Documentation ==
* [http://www-cs-students.stanford.edu/~blynn/gitmagic/ Git magic]
* [http://eagain.net/articles/git-for-computer-scientists/ Git for computer scientists]
* Carl Worth's [http://git-users.googlegroups.com/web/gitbasic.pdf?gda=vTVP7z0AAACRcUWZoNoqHn0MmsB4ogNRG1-Ifi4K28KdwtNliqLAWGG1qiJ7UbTIup-M2XPURDT86Y2dpGqz5OGwRQhHT1rr A tour of git: the basics] (PDF book)
* Git wikibook: [http://en.wikibooks.org/wiki/Source_Control_Management_With_Git Source Control Management With Git]
* [http://jonas.iki.fi/git_guides/HTML/git_guide Git in a Nutshell]
* [http://jonas.iki.fi/git_guides/HTML/CVS2git CVS to Git transition guide]
* [http://linux.yyz.us/git-howto.html The Kernel Hacker's Git Tutorial] by Jeff Garzik -Offline? (edit if works)
* [http://www.jdl.com The Git Papers] by Jon Loeliger -Offline? (edit if works)
* [http://git.rsbx.net/ Documents and Notes] by Raymond S Brand -Out of date? (edit if not)
== Non-english Language Documentation ==
== Chinese ==
* http://www.linuxsir.org/main/doc/git/gittutorcn.htm or http://www.bitsun.com/documents/gittutorcn.htm
** translation for official tutorials
* http://www.linuxsir.org/bbs/showthread.php?t=281294 or http://www.newsmth.net/bbscon.php?bid=392&id=422519
* http://my.opera.com/dahema/blog/show.dml/171011
* http://www-128.ibm.com/developerworks/cn/linux/l-git/index.html
* 
* [[BranchesInGit]] is an explanation about how Git understand branches.
* Use common [[CommitMessageConventions]], which are used by some of Git tools.
* [[SubprojectSupport]] in Git.
* [[HowToWriteTests]] describes how to write test cases for git.
* Ideas and thoughts on [[PatchManagement]].
* [[UsingGitWithOtherVCSTools]].
* 
Man pages

Each git command is documented in it's own man page. If the man pages are installed on your local system running:

<pre><nowiki>
$ man git-log
</nowiki></pre>
will give you the man page for the git log command. [http://www.kernel.org/pub/software/scm/git/docs/git.html git(7)] serves as an overview of git commands and man pages.

Online versions of the [[Git]] man pages corresponding to the latest development version can be found at:

* http://www.kernel.org/pub/software/scm/git/docs/
Similarly, [[Cogito]] man pages are available from:

* http://www.kernel.org/pub/software/scm/cogito/docs/
== Howtos and technical documents ==
Several howtos exist that describes the workflow for accomplishing various specific tasks, such as using the post-update hook to rebuild documentation. Note, these are typically derived from discussions on the git mailing list and only available in plain text.

* http://kernel.org/pub/software/scm/git/docs/howto/
There also exists a handful of technical documents that describes lowlevel details on how different parts of git operates. These are mostly useful for developers. You can find them in the [http://repo.or.cz/w/git.git?a=tree;f=Documentation/technical;hb=HEAD Documentation/technical] directory in the git source tree.

== Git's Documentation To-Do list ==
If you wish that something were documented better (or at all), or would like to contribute to Git's documentation, you should check the [[Documentation To-Do List]] to see whether your wish has already been mentioned, or to find something to write about.

== Getting and installing documentation ==
You can find all the plain text documentation in the git source tree's [http://www.kernel.org/git/?p=git/git.git;a=tree;f=Documentation Documentation/] directory.

In order to build the HTML version of the documentation you need to have [[AsciiDoc]] version 7.0 or greater installed. Man pages also require that xmlto is installed.

To build and install documentation from the git source code simply run:

<pre><nowiki>
$ make install-doc
</nowiki></pre>
If you want to avoid having to install the documentation tools, autogenerated documentation is available in separate tarballs from:

* http://www.kernel.org/pub/software/scm/git/
beginning with the 1.4.0 version, as:

* http://www.kernel.org/pub/software/scm/git/git-htmldocs-1.4.0.tar.gz
* http://www.kernel.org/pub/software/scm/git/git-manpages-1.4.0.tar.gz
Also, many distributions bundle pregenerated documentation with either the git-core package or in a separate git-doc package.

If you already track development in the public git project repository, you may also choose to fetch the autogenerated HTML and man pages from the <code><nowiki>html</nowiki></code> and <code><nowiki>man</nowiki></code> branches. Read [http://www.kernel.org/git/?p=git/git.git;a=blob;hb=HEAD;f=INSTALL INSTALL] for more detailed documentation (at the end of the file). Once you have fetched the branches, you can use:

<pre><nowiki>
$ git tar-tree man  > git-man.tar
$ git tar-tree html > git-html.tar
</nowiki></pre>
to easily extract the documentation.

For people on OS X (and on distributions that do not manage XML catalog files automatically), write-up by Steven Grimm may be helpful: http://article.gmane.org/gmane.comp.version-control.git/35565

----
[[CategoryGitDocumentation]] [[CategoryGitHomepage]] ([http://git.or.cz/#documentation Documentation])

__NOTOC__