= Installation Help =
== Installing Git ==

Very funny - the only method given to obtain git is to use git.

If you have already have Git installed (many new Linux distributions come with git), you can get the latest development version via Git itself by using the command:

<pre><nowiki>
git clone git://git.kernel.org/pub/scm/git/git.git</nowiki></pre>
* If you have problems connecting (Git uses port 9418), you can try to access the repository over the HTTP protocol (this method is considerably slower but works even behind firewalls and such):
<pre><nowiki>
git clone http://www.kernel.org/pub/scm/git/git.git
</nowiki></pre>
The <b>main</b> place to get Git is at: http://www.kernel.org/pub/software/scm/git/ You can also use one of many [http://www.kernel.org/mirrors/ kernel.org mirrors].

The latest install directions are included with git under INSTALL and the most current version online is [http://git.kernel.org/?p=git/git.git;a=blob_plain;f=INSTALL;hb=master here].

== Windows Systems ==
Git can be obtained by using the [http://www.cygwin.com/ Cygwin] system and installing Git from within Cygwin. More info at [[CygwinBinaryInstall]]. Another convenient choice is [http://code.google.com/p/msysgit/ msysGit]. If you would like to help develop Git on windows you need to [http://code.google.com/p/msysgit/ install the Git Development Environment for Windows]. Running Git on Windows is still in its infancy but it is improving rapidly every day.

If you have the main development team on linux/unix, and peripheral developers or translators on Windows, consider using <code><nowiki>git-cvsserver</nowiki></code> to give those users read or read/write access to the GIT tree via the CVS protocol. Committers using <code><nowiki>git-cvsserver</nowiki></code> have some limits: they cannot branch, tag or merge. On the other hand, git-cvsserver works well with Eclipse, TortoiseCVS and other easy-to-use CVS clients. You could also set up a SVN repository and use git-svn to achieve the same thing as using CVS.

== Others ==
* EclipseIDE-based GIT client, based on a pure [http://repo.or.cz/w/egit.git Java implementation] of GIT's internals.
* Windows Explorer extension ([http://code.google.com/p/msysgit/wiki/GitCheetah Git-Cheetah])
== OS X ==
Git for the OS X is installed by using the [http://code.google.com/p/git-osx-installer/downloads/list git-osx-installer]

== Getting and installing documentation ==
You can find all the plain text documentation in the git source tree's [http://www.kernel.org/git/?p=git/git.git;a=tree;f=Documentation Documentation/] directory.

In order to build the HTML version of the documentation you need to have [[AsciiDoc]] version 7.0 or greater installed. Man pages also require that xmlto is installed.

To build and install documentation from the git source code simply run:

<pre><nowiki>
$ make install-doc
</nowiki></pre>
If you want to avoid having to install the documentation tools, autogenerated documentation is available in separate tarballs from:

* http://www.kernel.org/pub/software/scm/git/
beginning with the 1.4.0 version, as:

* http://www.kernel.org/pub/software/scm/git/git-htmldocs-1.4.0.tar.gz
* http://www.kernel.org/pub/software/scm/git/git-manpages-1.4.0.tar.gz
Also, many distributions bundle pregenerated documentation with either the git-core package or in a separate git-doc package.

If you already track development in the public git project repository, you may also choose to fetch the autogenerated HTML and man pages from the <code><nowiki>html</nowiki></code> and <code><nowiki>man</nowiki></code> branches. Read [http://www.kernel.org/git/?p=git/git.git;a=blob;hb=HEAD;f=INSTALL INSTALL] for more detailed documentation (at the end of the file). Once you have fetched the branches, you can use:

<pre><nowiki>
$ git tar-tree man > git-man.tar
$ git tar-tree html > git-html.tar</nowiki></pre>
to easily extract the documentation.

For people on OS X (and on distributions that do not manage XML catalog files automatically), write-up by Steven Grimm may be helpful: http://article.gmane.org/gmane.comp.version-control.git/35565

__NOTOC__